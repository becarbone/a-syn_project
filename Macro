var c, s, i, imagedir, title, numChan, finChan, flat, colArray, chanArray, channels, ztack;
var namen, channels, stacks, channel1, channel2, channel3, channel4, colors, title, newTitle;
var settings, henny;
imagedir = getDirectory("Folder for images");
ROIdir = getDirectory("Folder for ROI");
denDir=getDirectory("Folder to save dendrites in");
Dialog.create("presets");
	settings = newArray("a-synuclein project","normal E18","custom");
	Dialog.addChoice("Which setting?",settings);
Dialog.show;
henny = Dialog.getChoice();
if(henny == "a-synuclein project") {
	run("Properties...", "channels=4 slices=6 frames=1 unit=micron pixel_width=0.1803752 pixel_height=0.1803752 voxel_depth=0.2891800");
	numChan = 4;
	finChan = 4;
	flat = "no";
	namen = "";
	ztack = true;
	c = "1234";
	colArray = newArray("Cyan","Blue","Green","Red");
}
else if (henny == "normal E18") {
	run("Properties...", "channels=3 slices=6 frames=1 unit=micron pixel_width=0.1706776 pixel_height=0.1706776 voxel_depth=1");
	numChan = 3;
	finChan = 3;
	flat = "yes";
	namen = "";
	ztack = true;
	c = "123";
	colArray = newArray("Green","Red","Blue");
}
else if (henny == "custom")	{
	Dialog.create("Arrange Channels");
		Dialog.addNumber("how many channels initially",0,0,1,"channel/s");
		Dialog.addNumber("how many channels in final image",0,0,1,"channel/s");
		Dialog.addString("Final image as a flat RGB?","yes");
		Dialog.addString("Suffix for all images?","_");
		Dialog.setInsets(0,200,0);
		Dialog.addCheckbox("Z-stack",true);
	Dialog.show();
	numChan = Dialog.getNumber();
	finChan = Dialog.getNumber();
	flat = Dialog.getString();
	namen = Dialog.getString();
	ztack = Dialog.getCheckbox();
	Dialog.create("what colors\nare the channels");
		channels = newArray("Green","Red","Blue","Cyan");
		for(n=0;n<numChan;n++){
			Dialog.addChoice("color",channels,channels[n]);
		}
	Dialog.show();
	chanArray = newArray();
	for(n=0;n<numChan;n++) {
		chanArray = Array.concat(chanArray,Dialog.getChoice());
	}
	
	Dialog.create("Arrange Channels");
		string = "Current Channels\n";
		for(n=0;n<numChan;n++) {
			string = string+" "+(n+1)+"-"+chanArray[n]+"\n";
		}
		Dialog.addMessage(string);
		finArray = newArray();
		colArray = newArray();
		for(n=0;n<finChan;n++) {
			Dialog.setInsets(20,0,0);
			Dialog.addNumber("Change to channel "+(n+1),(n+1),0,1,"");
			Dialog.setInsets(0,0,0);
			Dialog.addRadioButtonGroup("New channel color",chanArray,1,numChan,chanArray[n]);
		}
	Dialog.show();
	c="";
	for(n=0;n<finChan;n++) {
		finArray = Array.concat(finArray,Dialog.getNumber());
		colArray = Array.concat(colArray,Dialog.getRadioButton());
		c=c+d2s(finArray[n],0);
	}
}
run("ROI Manager...");
for(i=nImages;i>0;i--){
	selectImage(nImages);
	title = getTitle();
	Dialog.create("Title");
		Dialog.addMessage("Rename");
		Dialog.addString("",title+namen,50);
		Dialog.show();
	newTitle = Dialog.getString();
	rename(newTitle);
	title=getTitle();
	selectWindow(title);
	run("Arrange Channels...", "new="+c);
	rename("close_me");
	if(ztack == true) {
		run("Z Project...", "projection=[Max Intensity]");
		selectWindow("close_me");
		close();
	}
	else {
		selectWindow("close_me");
		rename("MAX_close_me");
	}
	selectImage("MAX_close_me");
	for(s=0;s<nSlices;s++) {
		setSlice(s+1);
		run(colArray[s]);
	}
	if (flat == "yes") {
		selectImage("MAX_close_me");
		run("Properties...", "channels=3 slices=1 frames=1 unit=um pixel_width=0.1705 pixel_height=0.1705 voxel_depth=1");
		run("Stack to RGB");
		selectImage("MAX_close_me (RGB)");
		saveAs("Tiff",imagedir+title);
		selectImage("MAX_close_me");
		close();
	} 
	else if(henny != "a-synuclein project") {
		selectImage("MAX_close_me");
		run("Properties...", "channels=3 slices=1 frames=1 unit=um pixel_width=0.1705 pixel_height=0.1705 voxel_depth=1");
		saveAs("Tiff",imagedir+title);
	}
	Dialog.create("Are there Usable dendrites?");
		Dialog.addString("","yes or no",30);
		Dialog.show();				
	collect = Dialog.getString();
	if (collect == "yes") {
		roiManager("reset");
		run("In [+]");
		run("In [+]");
		run("In [+]");
		//select dendrite
		setTool("polygon");
		if(henny == "a-synuclein project") {
			selectWindow("MAX_close_me");
			run("Properties...", "channels=4 slices=1 frames=1 unit=um pixel_width=0.1705 pixel_height=0.1705 voxel_depth=1");
			saveAs("Tiff",imagedir+title);
			waitForUser ("Select dendrite then hit OK");
			roiManager("Add");
			setSlice(1);
			run("Copy");
			run("Internal Clipboard");
			rename(colArray[0]+"-1");
			selectWindow(title+".tif");
			run("Next Slice [>]");
			run("Green");
			run("Copy");
			run("Internal Clipboard");
			rename(colArray[1]+"-1");
			selectWindow(title+".tif");
			run("Next Slice [>]");
			run("Blue");
			run("Copy");
			run("Internal Clipboard");
			rename(colArray[2]+"-1");
			selectWindow(title+".tif");
			run("Next Slice [>]");
			run("Copy");
			run("Internal Clipboard");
			rename(colArray[3]+"-1");
			setTool("polyline");
			waitForUser ("Measure dendrite length");
			run("Clear Results");
			run("Measure");
			length = getResult("Length",0);
			print(title+ "-1	"+length);	
			setTool("polygon");
			selectWindow(title+".tif");
			waitForUser ("Select dendrite then hit OK");
			roiManager("Add");
			setSlice(1);
			run("Copy");
			run("Internal Clipboard");
			rename(colArray[0]+"-2");
			selectWindow(title+".tif");
			run("Next Slice [>]");
			run("Copy");
			run("Internal Clipboard");
			rename(colArray[1]+"-2");
			selectWindow(title+".tif");
			run("Next Slice [>]");
			run("Copy");
			run("Internal Clipboard");
			rename(colArray[2]+"-2");
			selectWindow(title+".tif");
			run("Next Slice [>]");
			run("Copy");
			run("Internal Clipboard");
			rename(colArray[3]+"-2");
			selectWindow(title+".tif");
			setTool("polyline");
			waitForUser ("Measure dendrite length");
			run("Clear Results");
			run("Measure");
			length = getResult("Length",0);
			print(title+ "-2	"+length);	

			run("Merge Channels...", "c1=Red-1 c2=Blue-1 c3=Green-1 create");
			selectWindow("Composite");
			run("Stack to RGB");
			selectWindow("Composite (RGB)");
			saveAs("Tiff",denDir+title+"-1");
			close();
			selectWindow("Cyan-1");
			saveAs("Tiff",denDir+"Cyan"+title+"-1");
			close();
			selectWindow("Composite");
			close();
			run("Merge Channels...", "c1=Red-2 c2=Blue-2 c3=Green-2 create");
			selectWindow("Composite");
			run("Stack to RGB");
			selectWindow("Composite (RGB)");
			saveAs("Tiff",denDir+title+"-2");
			close();
			selectWindow("Cyan-2");
			saveAs("Tiff",denDir+"Cyan"+title+"-2");
			close();
			selectWindow("Composite");
			close();
			selectWindow(title+".tif");
			close();
			roiManager("save",ROIdir+title+".zip");
		}

		else {
			selectWindow(title+".tif");
			waitForUser ("Select dendrite then hit OK");
			run("Copy");
			run("Internal Clipboard");
			setTool("polyline");					
			waitForUser ("Measure dendrite length");
			run("Clear Results");
			run("Measure");
			roiManager("Add");
			length = getResult("Length",0);
			print(title+ "-1	"+length);	
			setTool("polygon");
			waitForUser ("Select dendrite then hit OK");
			run("Copy");
			run("Internal Clipboard");
			setTool("polyline");
			waitForUser ("Measure dendrite length");
			run("Clear Results");
			run("Measure");
			roiManager("Add");
			length = getResult("Length",0);
			print(title+ "-2	"+length);	
			selectWindow("Clipboard-1");
			saveAs("Tiff", denDir+title+"-2");
			close();
			selectWindow("Clipboard");
			saveAs("Tiff", denDir+title+"-1");
			close();
			selectWindow(title+".tif");
			close();
			collect = "reset";
			roiManager("save",ROIdir+title+".zip");
		}
		
	}
	else {
		close();
	}
}
